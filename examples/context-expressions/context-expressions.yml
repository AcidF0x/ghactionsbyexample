# [컨텍스트 변수](context-variables.html)에서 보신것처럼, 워크플로에 변수를 주입할수있습니다.
# `${{ <context variable> }}` 구문을 사용하여. 워크플로에서 비교나 간단한 함수로 표현식 평가를 할수있습니다.
# 더 많은 정보는 [문서](https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#about-contexts-and-expressions)에서 확인 할 수 있습니다.

name: expressions-example
on:
  push:
  pull:

jobs:
  use-expressions:
    strategy:
      matrix:
        greeting: [Hello, Howdy, Hey]
    runs-on: ubuntu-latest
    steps:
      -
        name: Print if 'Hello'
        # 비교 연산자로 boolean 판단을 할수 있습니다, 이번 예제에서는 greeting 값이 "Hello"일때만 Step을 실행합니다.
        # 문자열 리터럴에는 작은 따옴표를 사용하야 합니다.
        # `==`, `!=`, `<`, `<=`, `>`, `>=`, `&&`, `||`, and `( ... )`를 사용할수있습니다.
        # [여기서](https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#operators)다른 연산자를 확인할수있습니다
        if: ${{ matrix.greeting == 'Hello' }}
        run: echo "greeting is Hello"
      -
        name: Print if starts with 'He'
        if: ${{ startsWith(matrix.greeting, 'He') }}
        run: echo "greeting starts with He"
      -
        name: Print if ends with 'y'
        if: ${{ endsWith(matrix.greeting, 'y') }}
        run: echo "greeting ends with y"
      -
        name: Print if contains 'ow'
        if: ${{ contains(matrix.greeting, 'ow') }}
        run: echo "greeting contains ow"
      -
        name: Print formatted greeting
        run: |
          echo "${{ format('{0} says {1}', github.actor, matrix.greeting) }}"
      -
        name: To JSON
        # `toJSON()`로 pretty-print된 JSON 문자열로 변환 합니다.
        run: echo 'Job context is ${{ toJSON(job) }}'
      -
        name: From JSON
        # `fromJSON()`로 문자열을 JSON 객체 또는 값으로 변환합니다.
        env: ${{ fromJSON('{"FAVORITE_FRUIT": "APPLE", "FAVORITE_COLOR": "BLUE"}`) }}
        run: echo "I would like a ${FAVORITE_COLOR} ${FAVORITE_FRUIT}"
      -
        name: Success
        # `success()`는 이전 step이 실패 하였거나 취소 되지 않은경우 `true`를 반환합니다.
        if: ${{ success() }}
        run: echo "Still running..."
      -
        name: Always
        # `always()`는 이전 step이 실패하거나 워크플로가 취소된 경우와 상관없이 `true`를 반환합니다.
        if: ${{ always() }}
        run: echo "You will always see this"
      -
        name: Canceled
        # `canceled()`는 워크플로가 취소된 경우 `true`를 반환합니다.
        if: ${{ canceled() }}
        run: echo "You canceled the workflow"
      -
        name: Failure
        # `failure()` 이전 step이 실패한 경우 `true`를 반환합니다.
        if: ${{ failure() }}
        run: echo "Something went wrong..."
